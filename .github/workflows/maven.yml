# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  REGISTRY: "registry.digitalocean.com/taiqp"

jobs:
  Build:
    name: Build Docker Image and Push to Registry
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 8
      uses: actions/setup-java@v3
      with:
        java-version: '8'
        distribution: 'adopt'
        cache: maven
    - name: Build with Maven
      run: mvn clean install -DskipTests
      # run: mvn -B package --file pom.xml
    - name: Unit Test with Maven
      run: mvn test
    - name: Integration Test 
      run: mvn verify -DskipUnitTests
    
    # - name: ACR authentication
    #   uses: azure/docker-login@v1
    #   with:
    #     login-server: ${{ env.REGISTRYNAME }}.azurecr.io
    #     username: ${{ steps.acrCredentials.outputs.acr_username }}
    #     password: ${{ steps.acrCredentials.outputs.acr_password }}
    - name: Docker Auth
      uses: 'docker/login-action@v1'
      with:
        username: 'dop_v1_a570c58b6636b2f7428db2fc525ad8d56ebe6b0c30e6959ecdac189df977186d'
        password: 'dop_v1_a570c58b6636b2f7428db2fc525ad8d56ebe6b0c30e6959ecdac189df977186d'
        registry: '${{ env.REGISTRY }}'
    - name: Build the Docker image
      run: 
        docker build . --file Dockerfile --tag taiqp/visualpath:$(date +%s)
    - name: Push to Digital Ocean Registry
      run: 
        docker push 'taiqp/visualpath:$(date +%s)'
        

  Deploy:
    name: Deploy to Kubernetes
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
